// Copyright Â© 2017-2020 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

package TW.Flow.Proto;
option java_package = "wallet.core.jni.proto";

enum SignaureAlgorithm {
    SIGNALGO_INVALID = 0;
    SIGNALGO_ECDSA_P256 = 2;
    SIGNALGO_ECDSA_SECP256K1 = 3;
}

enum HashAlgorithm {
    HASHALGO_INVALID = 0;
    HASHALGO_SHA2_256 = 1;
    HASHALGO_SHA3_256 = 3;
}

message KeyInfo {
    // Public key, encoded as?
    string key = 1;
    SignaureAlgorithm sign_algo = 2;
    HashAlgorithm hash_algo = 3;
    int64 weight = 4;
}

// TODO: typical balance transfer, add more fields needed to sign
message TransferMessage {
    int64 amount = 1;
    string destination = 2;
}

// TODO: Input data necessary to create a signed transaction.
message SigningInput {
    repeated KeyInfo keys = 1;

    oneof message_oneof {
        TransferMessage transfer = 2;
    }
}

// Transaction signing output.
message SigningOutput {
    // Signed and encoded transaction bytes.
    bytes encoded = 1;
}
